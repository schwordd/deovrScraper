name: Build, Tag, and Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Determine next version
      id: vars
      run: |
        # Try to get the latest tag from the repository
        LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $LATEST_TAG"
        
        # Extract version numbers and increment the patch version
        if [ "$LATEST_TAG" = "v0.0.0" ]; then
          NEXT_VERSION="v1.0.0"
        else
          VERSION_PARTS=(${LATEST_TAG//v/ })
          VERSION_PARTS=(${VERSION_PARTS//./ })
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          PATCH=$((PATCH + 1))
          NEXT_VERSION="v$MAJOR.$MINOR.$PATCH"
        fi

        echo "Next version: $NEXT_VERSION"
        echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV

    - name: Determine architecture
      id: arch
      run: |
        ARCHITECTURE=$(uname -m)
        echo "Architecture: $ARCHITECTURE"
        echo "ARCHITECTURE=$ARCHITECTURE" >> $GITHUB_ENV

    - name: Create Git Tag
      run: |
        git tag ${{ env.NEXT_VERSION }}
        git push origin ${{ env.NEXT_VERSION }}

    - name: Setup .NET 8 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet publish -c Release -r win-x64 --self-contained -o ./output

    - name: Archive binaries
      run: |
        mkdir -p dist
        cp ./output/* dist/

    - name: List files in dist (build job)
      run: |
        echo "Listing files in dist/ directory after build:"
        ls -al dist/

    - name: Upload binaries as artifact
      uses: actions/upload-artifact@v3
      with:
        name: winx64-binaries
